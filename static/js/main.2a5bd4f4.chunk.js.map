{"version":3,"sources":["components/CalcBody.js","components/OutputBox.js","App.js","index.js"],"names":["CalcBody","useState","value","setValue","getVal","event","concat","target","name","clear","reverse","toString","calculate","eval","error","className","onClick","OutputBox","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8vBAGA,SAASA,WAEL,cAA0BC,oDAAS,IAAnC,qMAAOC,MAAP,cAAcC,SAAd,cAGMC,OAAS,SAACC,GACZF,SAASD,MAAMI,OAAOD,EAAME,OAAOC,QAGjCC,MAAQ,WACVN,SAAS,KAGPO,QAAU,WACZP,WAAiB,EAAPD,OAAUS,aAGlBC,UAAY,SAAZA,YACF,IACIT,SAASU,KAAKX,OAAOS,YACvB,MAAOG,OACLX,SAAS,0BAMjB,OACI,mEAAKY,UAAU,2BAAf,UAEI,2DAAC,0CAAD,CAAWb,MAAOA,QAElB,mEAAKa,UAAU,4BAAf,UAEI,qEAAQC,QAASP,MAAOM,UAAU,wCAAlC,eACA,qEAAQC,QAASN,QAASK,UAAU,wCAApC,iBACA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,wCAA5C,eACA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,4CAA5C,eAEA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,wCAA5C,eACA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,wCAA5C,eACA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,wCAA5C,eACA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,4CAA5C,eAEA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,wCAA5C,eACA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,wCAA5C,eACA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,wCAA5C,eACA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,4CAA5C,eAEA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,wCAA5C,eACA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,wCAA5C,eACA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,wCAA5C,eACA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,4CAA5C,eAEA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,iEAA5C,eACA,qEAAQP,KAAK,IAAIQ,QAASZ,OAAQW,UAAU,wCAA5C,eACA,qEAAQC,QAASJ,UAAWG,UAAU,0DAAtC,qBAMDf,gC,6BCjEf,gBAWeiB,IATf,YAA6B,IAATf,EAAQ,EAARA,MAEhB,OADAgB,QAAQC,IAAIjB,GAER,qBAAKa,UAAU,wDAAf,SACI,oBAAIA,UAAU,0EAAd,SAAyFb,Q,wICQtFkB,MATf,WACE,OACE,qBAAKL,UAAU,4EAAf,SAEE,cAACf,EAAA,EAAD,O,MCHNqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2a5bd4f4.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport OutputBox from './OutputBox'\n\nfunction CalcBody() {\n\n    const [value, setValue] = useState(\"\")\n\n \n    const getVal = (event) => {\n        setValue(value.concat(event.target.name))\n    }\n\n    const clear = () => {\n        setValue(\"\")\n    }\n\n    const reverse = () => {\n        setValue((value*-1).toString())\n    }\n\n    const calculate = () => {\n        try {\n            setValue(eval(value).toString())\n        } catch (error) {\n            setValue(\"Something went wrong\")\n        }\n        \n    }\n\n\n    return (\n        <div className=\" w-80 h-auto  rounded-lg\">\n            {/* Output box */}\n            <OutputBox value={value}/>\n            {/* Buttons */}\n            <div className=\"grid grid-cols-4 text-3xl\">\n                {/* Row 1 */}\n                <button onClick={clear} className=\"button bg-gray-600 active:bg-gray-400\">C</button>\n                <button onClick={reverse} className=\"button bg-gray-600 active:bg-gray-400\">+/-</button>\n                <button name=\"%\" onClick={getVal} className=\"button bg-gray-600 active:bg-gray-400\">%</button>\n                <button name=\"/\" onClick={getVal} className=\"button bg-yellow-500 active:bg-yellow-600\">/</button>\n                {/* Row 2 */}\n                <button name=\"7\" onClick={getVal} className=\"button bg-gray-400 active:bg-gray-300\">7</button>\n                <button name=\"8\" onClick={getVal} className=\"button bg-gray-400 active:bg-gray-300\">8</button>\n                <button name=\"9\" onClick={getVal} className=\"button bg-gray-400 active:bg-gray-300\">9</button>\n                <button name=\"*\" onClick={getVal} className=\"button bg-yellow-500 active:bg-yellow-600\">X</button>\n                {/* Row 3 */}\n                <button name=\"4\" onClick={getVal} className=\"button bg-gray-400 active:bg-gray-300\">4</button>\n                <button name=\"5\" onClick={getVal} className=\"button bg-gray-400 active:bg-gray-300\">5</button>\n                <button name=\"6\" onClick={getVal} className=\"button bg-gray-400 active:bg-gray-300\">6</button>\n                <button name=\"-\" onClick={getVal} className=\"button bg-yellow-500 active:bg-yellow-600\">-</button>\n                {/* Row 4 */}\n                <button name=\"1\" onClick={getVal} className=\"button bg-gray-400 active:bg-gray-300\">1</button>\n                <button name=\"2\" onClick={getVal} className=\"button bg-gray-400 active:bg-gray-300\">2</button>\n                <button name=\"3\" onClick={getVal} className=\"button bg-gray-400 active:bg-gray-300\">3</button>\n                <button name=\"+\" onClick={getVal} className=\"button bg-yellow-500 active:bg-yellow-600\">+</button>\n                {/* Row 5 */}\n                <button name=\"0\" onClick={getVal} className=\"col-span-2 button bg-gray-400 active:bg-gray-300 rounded-bl-xl\">0</button>\n                <button name=\".\" onClick={getVal} className=\"button bg-gray-400 active:bg-gray-300\">.</button>\n                <button onClick={calculate} className=\"button bg-yellow-500 active:bg-yellow-600 rounded-br-xl\">=</button>\n            </div>\n        </div>\n    )\n}\n\nexport default CalcBody\n","import React from 'react'\n\nfunction OutputBox({value}) {\n    console.log(value)\n    return (\n        <div className=\"p-4 h-24 text-white bg-gray-700 rounded-t-xl relative\">\n            <h1 className=\"font-bold max-w-xs overflow-x-scroll text-5xl absolute bottom-0 right-0\">{value}</h1>\n        </div>\n    )\n}\n\nexport default OutputBox\n","import React from 'react';\nimport CalcBody from './components/CalcBody';\n\n\n\nfunction App() {\n  return (\n    <div className=\" bg-black h-screen min-w-screen flex flex-row items-center justify-center\">\n      {/* Calculator Body */}\n      <CalcBody/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"./styles/tailwind.generated.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}